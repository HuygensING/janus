Janus
=====

Janus converts XML to text-with-annotations, e.g.::

    <p>Hello, <b>world</b>!</p>

Becomes "Hello, world!" with annotations (p, 0, 12), (b, 7, 11).


Usage as an XML transformer
---------------------------

Compile and run::

    mvn clean package
    ./target/appassembler/bin/janus server janus.yml

(or use the Dockerfile, ``docker run -p 8080:8080 $(docker build -q .)``).
Then POST an XML file::

    curl -d '<p>Hello, <b>world</b>!</p>' http://localhost:8080/transform


Usage with an Elasticsearch backend
-----------------------------------

Start Elasticsearch with the appropriate settings::

    cd elasticsearch-setup
    docker run -p 9200:9200 -p 9300:9300 $(docker build -q .)

Add the annotations index (optional, but strongly recommended)::

    sh put_index.sh

You can now upload an XML file to have it indexed as a document with one
annotation per tag::

    curl -X POST http://localhost:8080/putxml/some_id -d @somefile.xml
    curl http://localhost:8080/get/some_id

Add an annotation::

    curl -H 'Content-Type: application/json' -X POST \
        http://localhost:8080/annotate/somefile.xml -d '{
            "start": 4, "end": 10, "body": "Note!", "tag": "note",
            "type": "user"
        }'

This reports the (autogenerated) id of the annotation.


Example: bulk indexing
~~~~~~~~~~~~~~~~~~~~~~
To upload XML files in bulk for indexing, use something like::

    find some_dir -name '*.xml' -print0 |
        xargs -0 -n 1 sh -c '
            curl -s -XPOST http://localhost:8080/putxml/$(uuidgen) -d @$0
            echo " " $0
        '

This indexes all XML files below ``some_dir``, assigning to each a UUID.
It prints to stdout a list of UUID/path pairs.
